The mDirac Mex extension
========================
Marc Joliet <marcec@gmx.de>

Introduction
------------

This document explains how to compile mDirac.

mDirac is a mex wrapper for the time-stretching/pitch-shifting C++ library
Dirac, written by Stephan Bernsee of http://www.dspdimension.com[].  It works
with Matlab arrays of arbitrary MxN dimension, M being the number of samples per
channel and N being the number of channels, as returned by, e.g., 'wavread()'.

Compiling
---------

There are 2 ways to compile mDirac.  The easy way is to call the m-file
'compile_timestretch.m' from Matlab.  There is also a more flexible build system
based on SCons available, though it is perhaps overblown for a project of this
size.  It has, however, proven that a proper and robust cross-platform build
system for Mex extensions is possible.  There is also an obsolete CMake based
build system, which is probably broken, as fixes to compilation errors were
incorporated in the SConstruct file but not in the CMakeLists.txt file.  For
details to all methods, see their relevant subsections.

A problem of all methods of compilation is that at least two things are not
implemented.  For one thing: installing.  It is expected that you copy the
resulting Mex binaries to wherever your Matlab installation looks for them.  The
other problem is that on Windows with CMake, required DLLs are not copied into
the Visual Studio build directory (though it is of course possible and probably
easy).  This means you have to add an appropriate command to the VS project file
or copy the DLLs yourself.

Prerequisites
~~~~~~~~~~~~~

mDirac has no external dependencies as the DiracLE library is bundled.

Using the compile_timestretch.m script (all platforms)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In Matlab, type 'compile_timestretch'.  This will compile both Mex extensions
and run a test script.

Using the SCons based build system
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The SCons based build system is a more robust alternative to the CMake based
one.  It comes with an extension that properly presets a few environment
variables, though it slows compilation down because it starts a Matlab
subprocess to obtain them.  If you need to work on the Code and plan to compile
often, you can use the interactive mode by passing the '--interactive' option to
SCons, so that the command line would look like

--------------------------------------
scons --interactive [options] [target]
--------------------------------------

Linux
^^^^^

Just open a terminal and type

-----------------
    $ scons
-----------------

while in the source directory.  Users with 32 bit Matlab on 64 bit systems
should pass the --linux32 option to enforce 32 bit compilation.

Windows
^^^^^^^

If SCons is in your PATH, you can open a console and follow the steps under
Linux.  The '--make-msvs' option creates a MS VisualStudio Solution file with
mDirac as a project.  For other IDEs, see
http://www.scons.org/wiki/IDEIntegration[].

Mac OS X
^^^^^^^^

Follow the same steps as under Linux, or look into integrating SCons into your
IDE of choice (see http://www.scons.org/wiki/IDEIntegration[]).

Using the CMake based build system (obsolete)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The CMake based build system is obsoleted by both the SCons based build system
and the 'compile_timestretch.m' script.  It is documented here for completeness.

Linux
^^^^^

Just open a terminal and type

-----------------
    $ cmake .
-----------------

while in the source directory.  This will produce a Makefile that works as
expected, save for the aforementioned caveats.  Alternatively, you can use the
'cmake-gui' application (see the Windows subsection for a small introduction).

Windows
^^^^^^^

Under Windows it is recommended to use the 'cmake-gui' application. Follow these steps:

    1. Select the source and build directories (typically identical).
    2. Click on 'Configure' to configure the build system.  Upon first use, you
       will be prompted for the target, i.e. which IDE/compiler you use.
    3. Click on 'Generate'.  This will, as the name implies, generates a project
       file for your IDE of choice.

You should now have an IDE project file in the source directory.  Open it and
start compilation.

Mac OS X
^^^^^^^^

On Mac OS X you can either follow the same steps as under Linux or under
Windows according to your own preferences.

Copyrights
----------

For the copyrights to mDirac and the SCons Matlab tool, see the file LICENSE.

DIRAC Time Stretch/Pitch Shift technology (c) 2005-2009 Stephan M. Bernsee,
http://www.dspdimension.com[].
